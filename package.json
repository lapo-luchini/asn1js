{
  "name": "@lapo/asn1js",
  "version": "2.0.3",
  "description": "Generic ASN.1 parser/decoder that can decode any valid ASN.1 DER or BER structures.",
  "type": "module",
  "main": "asn1.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lapo-luchini/asn1js.git"
  },
  "keywords": [ "asn1", "ber", "der", "pem" ],
  "author": "Lapo Luchini <lapo@lapo.it>",
  "license": "ISC",
  "bugs": { "url": "https://github.com/lapo-luchini/asn1js/issues" },
  "homepage": "https://lapo.it/asn1js/",
  "files": [ "asn1.js", "base64.js", "hex.js", "int10.js", "defs.js", "oids.js", "rfcdef.js" ],
  "scripts": {
    "lint": "npx eslint asn1.js base64.js hex.js int10.js defs.js oids.js rfcdef.js tags.js context.js index.js parseRFC.js dumpASN1.js test.js testDefs.js vite.config.js theme.js",
    "lint-action": "npx @action-validator/cli .github/workflows/node.js.yml",
    "build": "vite build",
    "serve": "echo 'Connect to http://localhost:3000/' ; npx statik --port 3000 .",
    "test": "node test",
    "testdefs": "node testDefs"
  },
  "engines": {
    "node": ">=12.20.0"
  },
  "devDependencies": {
    "eslint": "^8.34.0",
    "htmlparser2": "^9.1.0",
    "vite": "^5.2.10",
    "vite-plugin-dom": "^1.0.3",
    "vite-plugin-singlefile": "^2.0.1"
  },
  "overrides": {
    "rollup": "npm:@rollup/wasm-node"
  },
  "pnpm": {
    "overrides": {
      "rollup": "npm:@rollup/wasm-node"
    }
  },
  "eslintConfig": {
    "env": {
      "es6": true,
      "browser": true,
      "node": true
    },
    "parserOptions": {
      "ecmaVersion": 2015,
      "sourceType": "module"
    },
    "extends": [ "eslint:recommended" ],
    "globals": {
      "Uint8Array": "readonly"
    },
    "rules": {
      "strict": [ "error", "function" ],
      "indent": [ "error", 4 ],
      "linebreak-style": [ "error", "unix" ],
      "semi": [ "warn", "always" ],
      "quotes": [ "error", "single", { "avoidEscape": true } ],
      "no-var": [ "warn" ],
      "comma-dangle": [ "error", "always-multiline" ]
    },
    "overrides": [
      {
        "files": [ "defs.js" ],
        "parserOptions": {
          "ecmaVersion": 2020
        }
      }, {
        "files": [ "test.js", "parseRFC.js", "dumpASN1.js" ],
        "parserOptions": {
          "ecmaVersion": 2021
        },
        "rules": {
          "strict": [ "error", "global" ]
        }
      }, {
        "files": [ "oids.js" ],
        "rules": {
          "indent": "off",
          "quotes": [ "warn", "double" ]
        }
      }, {
        "files": [ "tags.js", "rfcdef.js" ],
        "rules": {
          "indent": [ "error", 2, { "ignoredNodes": [ "Program > ExpressionStatement > CallExpression > FunctionExpression > BlockStatement > ExpressionStatement[directive='use strict']:first-child" ] } ],
          "comma-dangle": "off",
          "quotes": [ "warn", "double" ]
        }
      }, {
        "files": [ "defs.js" ],
        "parserOptions": {
          "ecmaVersion": 2021
        }
      }, {
        "files": [ "testDefs.js" ],
        "parserOptions": {
          "ecmaVersion": 2022
        }
      }
    ]
  }
}
